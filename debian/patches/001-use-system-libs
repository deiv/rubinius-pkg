Description: Use system packaged libs
 Use system packaged libraries instead of distributes vendor ones.
 
Author: David Su√°rez <david.sephirot@gmail.com>
Last-Update: 2013-11-16

--- rubinius-2.0.0+gitb2952297.orig/configure
+++ rubinius-2.0.0+gitb2952297/configure
@@ -440,6 +440,8 @@ class Configure
     feature "ruby-readline", false
     feature "vendor-zlib", false
     feature "vendor-yaml", false
+    feature "vendor-doubleconv", false
+    feature "vendor-ffi", false
     feature "alloc-tracking", false
     feature "fibers", true
     feature "dtrace", false
@@ -1690,6 +1692,8 @@ int main() { return tgetnum(""); }
       :linux              => @linux,
       :vendor_zlib        => @features["vendor-zlib"].value,
       :vendor_yaml        => @features["vendor-yaml"].value,
+      :vendor_doubleconv  => @features["vendor-doubleconv"].value,
+      :vendor_ffi         => @features["vendor-ffi"].value,
       :readline           => @rb_readline ? :rb_readline : :c_readline,
       :vm_release_h       => @vm_release_h,
       :vm_version_h       => @vm_version_h,
--- rubinius-2.0.0+gitb2952297.orig/rakelib/blueprint.rb
+++ rubinius-2.0.0+gitb2952297/rakelib/blueprint.rb
@@ -113,26 +113,35 @@ Daedalus.blueprint do |i|
   end
   files << oniguruma
 
-  double_conversion = i.external_lib "vendor/double-conversion" do |l|
-    l.cflags = ["-Ivendor/double-conversion/src"] + gcc.cflags
-    l.objects = [l.file("libdoubleconversion.a")]
-    l.to_build do |x|
-      x.command make
+  if Rubinius::BUILD_CONFIG[:vendor_doubleconv]
+    double_conversion = i.external_lib "vendor/double-conversion" do |l|
+      l.cflags = ["-Ivendor/double-conversion/src"] + gcc.cflags
+      l.objects = [l.file("libdoubleconversion.a")]
+      l.to_build do |x|
+	x.command make
+      end
     end
+    gcc.add_library double_conversion
+    files << double_conversion
+  else
+    gcc.cflags  << "-I/usr/include/double-conversion"
+    gcc.ldflags << "-ldouble-conversion"
   end
-  gcc.add_library double_conversion
-  files << double_conversion
 
-  ffi = i.external_lib "vendor/libffi" do |l|
-    l.cflags = ["-Ivendor/libffi/include"] + gcc.cflags
-    l.objects = [l.file(".libs/libffi.a")]
-    l.to_build do |x|
-      x.command "sh -c './configure --disable-builddir'" unless File.exists?("Makefile")
-      x.command make
+  if Rubinius::BUILD_CONFIG[:vendor_ffi]
+    ffi = i.external_lib "vendor/libffi" do |l|
+      l.cflags = ["-Ivendor/libffi/include"] + gcc.cflags
+      l.objects = [l.file(".libs/libffi.a")]
+      l.to_build do |x|
+	x.command "sh -c './configure --disable-builddir'" unless File.exists?("Makefile")
+	x.command make
+      end
     end
+    gcc.add_library ffi
+    files << ffi
+  else
+    gcc.ldflags << "-lffi"
   end
-  gcc.add_library ffi
-  files << ffi
 
   udis = i.external_lib "vendor/udis86" do |l|
     l.cflags = ["-Ivendor/udis86"] + gcc.cflags
