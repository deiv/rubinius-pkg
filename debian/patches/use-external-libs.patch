Description: Use external libs
 Gives the option to use external libraries instead of distributed
 vendor ones.

Author: David Su√°rez <david.sephirot@gmail.com>
Last-Update: 2014-05-04

--- a/rakelib/blueprint.rb
+++ b/rakelib/blueprint.rb
@@ -116,26 +116,35 @@ Daedalus.blueprint do |i|
   end
   files << oniguruma
 
-  double_conversion = i.external_lib "vendor/double-conversion" do |l|
-    l.cflags = ["-Ivendor/double-conversion/src"] + gcc.cflags
-    l.objects = [l.file("libdoubleconversion.a")]
-    l.to_build do |x|
-      x.command make
-    end
+  if Rubinius::BUILD_CONFIG[:vendor_doubleconv]
+    double_conversion = i.external_lib "vendor/double-conversion" do |l|
+      l.cflags = ["-Ivendor/double-conversion/src"] + gcc.cflags
+      l.objects = [l.file("libdoubleconversion.a")]
+      l.to_build do |x|
+        x.command make
+      end
+     end
+    gcc.add_library double_conversion
+    files << double_conversion
+  else
+    gcc.cflags  << "-I/usr/include/double-conversion"
+    gcc.ldflags << "-ldouble-conversion"
   end
-  gcc.add_library double_conversion
-  files << double_conversion
 
-  ffi = i.external_lib "vendor/libffi" do |l|
-    l.cflags = ["-I#{src}/vendor/libffi/include"] + gcc.cflags
-    l.objects = [l.file(".libs/libffi.a")]
-    l.to_build do |x|
-      x.command "sh -c './configure --disable-builddir'" unless File.exist?("Makefile")
-      x.command make
+  if Rubinius::BUILD_CONFIG[:vendor_ffi]
+    ffi = i.external_lib "vendor/libffi" do |l|
+      l.cflags = ["-Ivendor/libffi/include"] + gcc.cflags
+      l.objects = [l.file(".libs/libffi.a")]
+      l.to_build do |x|
+        x.command "sh -c './configure --disable-builddir'" unless File.exists?("Makefile")
+        x.command make
+      end
     end
+    gcc.add_library ffi
+    files << ffi
+  else
+    gcc.ldflags << "-lffi"
   end
-  gcc.add_library ffi
-  files << ffi
 
   udis = i.external_lib "vendor/udis86" do |l|
     l.cflags = ["-I#{src}/vendor/udis86"] + gcc.cflags
